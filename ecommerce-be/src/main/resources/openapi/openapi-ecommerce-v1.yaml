openapi: 3.0.0
info:
  title: Shopping Cart API
  version: 1.0.0
  description: API for handling the shopping cart.
servers:
  - url: /api/v1
    description: API base path
tags:
  - name: Cart
    description: Operations to manage the entire shopping cart resource.
  - name: Cart Items
    description: Operations to manage individual items within a specific shopping cart.
paths:
  /cart:
    post:
      summary: Create a new shopping cart
      operationId: createCart
      tags:
        - Cart
      description: Creates a new shopping cart resource.
      requestBody:
        description: The initial data for the shopping cart.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartCreateRequest'
      responses:
        '201':
          description: Shopping cart created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponse'
        '400':
          description: Invalid request payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Retrieve a shopping cart by its ID
      operationId: getCart
      tags:
        - Cart
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Shopping cart found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponse'
        '404':
          description: Shopping cart not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Partially update a shopping cart
      operationId: updateCart
      tags:
        - Cart
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Fields to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartUpdateRequest'
      responses:
        '200':
          description: Shopping cart updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponse'
        '404':
          description: Shopping cart not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a shopping cart
      operationId: deleteCart
      tags:
        - Cart
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Shopping cart deleted successfully.
        '404':
          description: Shopping cart not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /cart/{cartId}/item:
    post:
      summary: Add a new item to the shopping cart
      operationId: createCartItem
      tags:
        - Cart Items
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Item to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemCreateRequest'
      responses:
        '200':
          description: Item added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /cart/{cartId}/item/{itemId}:
    patch:
      summary: Partially update a cart item
      operationId: updateCartItem
      tags:
        - Cart Items
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Fields to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemUpdateRequest'
      responses:
        '200':
          description: Item updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
        '404':
          description: Cart or item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Remove a cart item
      operationId: deleteCartItem
      tags:
        - Cart Items
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Item removed successfully
        '404':
          description: Cart or item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CartCreateRequest:
      type: object
      required:
        - currency
      properties:
        userId:
          type: string
        currency:
          type: string
        meta:
          type: object
          additionalProperties: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItemCreateRequest'

    CartUpdateRequest:
      type: object
      properties:
        userId:
          type: string
        currency:
          type: string
        meta:
          type: object
          additionalProperties: true

    CartResponse:
      type: object
      required:
        - cartId
        - items
        - currency
      properties:
        cartId:
          type: string
          format: uuid
        userId:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        currency:
          type: string
        totalItems:
          type: integer
        totalAmount:
          type: number
          format: float
        expiresAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        meta:
          type: object
          additionalProperties: true

    CartItemCreateRequest:
      type: object
      required:
        - title
        - quantity
        - price
      properties:
        itemId:
          type: string
        title:
          type: string
        description:
          type: string
        quantity:
          type: integer
        price:
          type: number
          format: float
        meta:
          type: object
          additionalProperties: true

    CartItemUpdateRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        quantity:
          type: integer
        price:
          type: number
          format: float
        meta:
          type: object
          additionalProperties: true

    CartItem:
      type: object
      required:
        - itemId
        - title
        - quantity
        - price
      properties:
        itemId:
          type: string
        title:
          type: string
        description:
          type: string
        quantity:
          type: integer
        price:
          type: number
          format: float
        meta:
          type: object
          additionalProperties: true

    ErrorResponse:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        traceId:
          type: string
